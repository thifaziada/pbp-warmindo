{"version":3,"names":["ThemeProvider","props","theme","themeProp","children","themeState","setThemeState","React","useState","deepmerge","defaultTheme","setTheme","newTheme","mergedTheme"],"sources":["theme.provider.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { ThemeType } from './type';\nimport { ThemeContext } from './theme.context';\nimport { defaultTheme } from '../style';\nimport deepmerge from 'deepmerge';\n\nexport interface ThemeProviderProps {\n  theme?: ThemeType;\n  children: React.ReactNode;\n}\n\nexport const ThemeProvider: React.FunctionComponent<ThemeProviderProps> = (\n  props\n) => {\n  const { theme: themeProp = {}, children } = props;\n\n  const [themeState, setThemeState] = React.useState(\n    deepmerge(defaultTheme, themeProp)\n  );\n\n  const setTheme = (newTheme: ThemeType) => {\n    const mergedTheme = deepmerge(defaultTheme, newTheme);\n    setThemeState(mergedTheme);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme: themeState, setTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n"],"mappings":";;;;;;;AAAA;;AAGA;;AACA;;AACA;;;;;;;;AAOO,MAAMA,aAA0D,GACrEC,KADwE,IAErE;EACH,MAAM;IAAEC,KAAK,EAAEC,SAAS,GAAG,EAArB;IAAyBC;EAAzB,IAAsCH,KAA5C;EAEA,MAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BC,KAAK,CAACC,QAAN,CAClC,IAAAC,kBAAA,EAAUC,mBAAV,EAAwBP,SAAxB,CADkC,CAApC;;EAIA,MAAMQ,QAAQ,GAAIC,QAAD,IAAyB;IACxC,MAAMC,WAAW,GAAG,IAAAJ,kBAAA,EAAUC,mBAAV,EAAwBE,QAAxB,CAApB;IACAN,aAAa,CAACO,WAAD,CAAb;EACD,CAHD;;EAKA,oBACE,oBAAC,mBAAD,CAAc,QAAd;IAAuB,KAAK,EAAE;MAAEX,KAAK,EAAEG,UAAT;MAAqBM;IAArB;EAA9B,GACGP,QADH,CADF;AAKD,CAnBM"}