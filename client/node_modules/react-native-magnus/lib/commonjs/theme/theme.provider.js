"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ThemeProvider = void 0;

var React = _interopRequireWildcard(require("react"));

var _theme = require("./theme.context");

var _style = require("../style");

var _deepmerge = _interopRequireDefault(require("deepmerge"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const ThemeProvider = props => {
  const {
    theme: themeProp = {},
    children
  } = props;
  const [themeState, setThemeState] = React.useState((0, _deepmerge.default)(_style.defaultTheme, themeProp));

  const setTheme = newTheme => {
    const mergedTheme = (0, _deepmerge.default)(_style.defaultTheme, newTheme);
    setThemeState(mergedTheme);
  };

  return /*#__PURE__*/React.createElement(_theme.ThemeContext.Provider, {
    value: {
      theme: themeState,
      setTheme
    }
  }, children);
};

exports.ThemeProvider = ThemeProvider;
//# sourceMappingURL=theme.provider.js.map