{"version":3,"names":[],"sources":["modal.type.tsx"],"sourcesContent":["import {\n  Orientation,\n  OnSwipeCompleteParams,\n  Direction,\n  OnOrientationChange,\n  PresentationStyle,\n} from 'react-native-modal';\nimport { StyleProp, ViewStyle } from 'react-native';\nimport { Animation, CustomAnimation } from 'react-native-animatable';\n\nimport {\n  BorderPropsType,\n  SpacingPropsType,\n  RoundedPropsType,\n  BackgroundPropsType,\n  DimensionPropsType,\n  FlexPropsType,\n  VariantPropsType,\n} from '../../types';\n\nexport type ModalRef = {\n  open: () => void;\n  close: () => void;\n};\n\ntype OrNull<T> = null | T;\nexport interface ModalProps\n  extends BorderPropsType,\n    SpacingPropsType,\n    RoundedPropsType,\n    Pick<BackgroundPropsType, 'bg'>,\n    Pick<DimensionPropsType, 'h'>,\n    Pick<FlexPropsType, 'justifyContent'>,\n    VariantPropsType {\n  children: React.ReactElement[] | React.ReactElement;\n  animationIn?: Animation | CustomAnimation;\n  animationInTiming?: number;\n  animationOut?: Animation | CustomAnimation;\n  animationOutTiming?: number;\n  avoidKeyboard?: boolean;\n  coverScreen?: boolean;\n  hasBackdrop?: boolean;\n  backdropColor?: string;\n  backdropOpacity?: number;\n  backdropTransitionInTiming?: number;\n  backdropTransitionOutTiming?: number;\n  customBackdrop?: React.ReactNode;\n  useNativeDriver?: boolean;\n  deviceHeight?: number;\n  deviceWidth?: number;\n  isVisible?: boolean;\n  hideModalContentWhileAnimating?: boolean;\n  propagateSwipe?: boolean;\n  onModalShow?: () => void;\n  onModalWillShow?: () => void;\n  onModalHide?: () => void;\n  onModalWillHide?: () => void;\n  onBackButtonPress?: () => void;\n  onBackdropPress?: () => void;\n  swipeThreshold?: number;\n  scrollTo?: OrNull<(e: any) => void>;\n  scrollOffset?: number;\n  scrollOffsetMax?: number;\n  scrollHorizontal?: boolean;\n  supportedOrientations?: Orientation[];\n\n  onSwipeStart?: () => void;\n  onSwipeMove?: (percentageShown: number) => void;\n  onSwipeComplete?: (params: OnSwipeCompleteParams) => void;\n  onSwipeCancel?: () => void;\n  style?: StyleProp<ViewStyle>;\n  swipeDirection?: Direction | Array<Direction>;\n  onDismiss?: () => void;\n  onShow?: () => void;\n  hardwareAccelerated?: boolean;\n  onOrientationChange?: OnOrientationChange;\n  presentationStyle?: PresentationStyle;\n}\n"],"mappings":""}