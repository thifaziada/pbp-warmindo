"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Carousel = void 0;

var _react = _interopRequireDefault(require("react"));

var _useDefaultProps = require("../../utilities/useDefaultProps");

var _div = require("../div/div.component");

var _scrolldiv = require("../scrolldiv/scrolldiv.component");

var _item = _interopRequireDefault(require("./item.carousel"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const Carousel = incomingProps => {
  const props = (0, _useDefaultProps.useDefaultProps)('Carousel', incomingProps, {
    showIndicators: true
  });
  const {
    children,
    renderIndicators,
    showIndicators
  } = props;

  const [selectedPage, setSelectedPage] = _react.default.useState(1);

  const [totalPages, setTotalPages] = _react.default.useState(1);

  const [totalContentWidth, setTotalContentWidth] = _react.default.useState(0);

  const items = _react.default.useMemo(() => {
    return _react.default.Children.map(children, child => {
      if (! /*#__PURE__*/_react.default.isValidElement(child)) {
        return;
      }

      if (child.type === _item.default) {
        return child;
      }

      console.warn('Only children of type Carousel.Item are allowed here. Any other child components will be ignored.');
      return null;
    }) ?? [];
  }, [children]);

  const init = width => {
    // initialize width
    setTotalContentWidth(width); // initialize total pages

    const totalItems = items.length;
    setTotalPages(totalItems);
  };

  const getPage = event => {
    const widthOffset = event.nativeEvent.contentOffset.x;
    const widthOfEachItem = totalContentWidth / totalPages; // const pageWidth = widthOfEachItem * itemsPerPage;

    for (let page = 1; page <= totalPages; page++) {
      if (widthOffset + 1 < widthOfEachItem * page) {
        return page;
      }

      if (page === totalPages) {
        return page;
      }
    }

    return 0;
  };

  const internal_renderIndicators = () => {
    if (renderIndicators) {
      return renderIndicators({
        selectedPage,
        totalPages
      });
    }

    return /*#__PURE__*/_react.default.createElement(_div.Div, {
      flexDir: "row",
      justifyContent: "center",
      my: "lg"
    }, Array(totalPages).fill(0).map((_, index) => {
      return /*#__PURE__*/_react.default.createElement(_div.Div, {
        w: 10,
        h: 10,
        rounded: "circle",
        bg: selectedPage === index + 1 ? 'blue600' : 'gray400',
        mx: "xs",
        key: index
      });
    }));
  };

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_scrolldiv.ScrollDiv, _extends({}, props, {
    horizontal: true,
    contentContainerStyle: {
      width: `${100 * totalPages}%`,
      flex: 1
    },
    showsHorizontalScrollIndicator: false,
    onContentSizeChange: (w, _h) => init(w),
    onScroll: data => {
      setTotalContentWidth(data.nativeEvent.contentSize.width);
      setSelectedPage(getPage(data));
    },
    scrollEventThrottle: 200,
    pagingEnabled: true,
    decelerationRate: "fast"
  }), items === null || items === void 0 ? void 0 : items.map((child, index) => /*#__PURE__*/_react.default.createElement(_div.Div, {
    flex: 1,
    key: index
  }, child))), showIndicators && internal_renderIndicators());
};

exports.Carousel = Carousel;
Carousel.Item = _item.default;
//# sourceMappingURL=carousel.component.js.map