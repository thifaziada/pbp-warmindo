"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Manager = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const Manager = /*#__PURE__*/React.forwardRef((_, ref) => {
  const [portals, setPortals] = React.useState([]);
  React.useImperativeHandle(ref, () => ({
    mount(key, children) {
      setPortals(prev => [...prev, {
        key,
        children
      }]);
    },

    update(key, children) {
      setPortals(prev => prev.map(item => {
        if (item.key === key) {
          return { ...item,
            children
          };
        }

        return item;
      }));
    },

    unmount(key) {
      setPortals(prev => prev.filter(item => item.key !== key));
    }

  }));
  return portals.map((_ref, index) => {
    let {
      key,
      children
    } = _ref;
    return /*#__PURE__*/React.createElement(_reactNative.View, {
      key: `react-native-magnus-portal-${key}-${index}`,
      collapsable: false,
      pointerEvents: "box-none",
      style: _reactNative.StyleSheet.absoluteFill
    }, children);
  });
});
exports.Manager = Manager;
//# sourceMappingURL=manager.component.js.map