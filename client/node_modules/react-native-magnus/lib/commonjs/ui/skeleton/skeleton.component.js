"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Skeleton = exports.Circle = void 0;

var React = _interopRequireWildcard(require("react"));

var Animatable = _interopRequireWildcard(require("react-native-animatable"));

var _useDefaultProps = require("../../utilities/useDefaultProps");

var _div = require("../div/div.component");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const Skeleton = incomingProps => {
  const props = (0, _useDefaultProps.useDefaultProps)('Skeleton', incomingProps, {
    bg: 'gray400',
    h: 15,
    w: '100%',
    rounded: 'lg',
    duration: 1000
  });
  const {
    duration,
    ...rest
  } = props;
  Animatable.initializeRegistryWithDefinitions({
    fade: {
      0: {
        opacity: 1
      },
      0.5: {
        opacity: 0.3
      },
      1: {
        opacity: 1
      }
    }
  });
  return /*#__PURE__*/React.createElement(Animatable.View, {
    animation: "fade",
    duration: duration,
    easing: "linear",
    iterationCount: "infinite"
  }, /*#__PURE__*/React.createElement(_div.Div, rest));
};

exports.Skeleton = Skeleton;

const Circle = incomingProps => {
  const props = (0, _useDefaultProps.useDefaultProps)('SkeletonCircle', incomingProps, {
    bg: 'gray400',
    h: 15,
    w: 15,
    rounded: 'circle'
  });
  return /*#__PURE__*/React.createElement(Skeleton, props);
};

exports.Circle = Circle;
Skeleton.defaultProps = {
  bg: 'gray400',
  h: 15,
  w: '100%',
  rounded: 'lg',
  duration: 1000
};
Circle.defaultProps = {
  bg: 'gray400',
  h: 15,
  w: 15,
  rounded: 'circle'
};
Skeleton.Box = Skeleton;
Skeleton.Circle = Circle;
//# sourceMappingURL=skeleton.component.js.map