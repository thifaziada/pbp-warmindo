{"version":3,"names":["Textarea","incomingProps","props","useDefaultProps","minH","p","borderColor","borderWidth","multiline","textAlignVertical","h","w","m","minW","suffix","prefix","style","onBlur","onFocus","children","focusBorderColor","rest","theme","useTheme","isFocussed","setIsFocussed","useState","computedStyle","getStyle","onFocusInput","e","onBlurInput","container","input"],"sources":["textarea.component.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport {\n  View as RNView,\n  NativeSyntheticEvent,\n  TextInputFocusEventData,\n  TextInput as RNTextInput,\n} from 'react-native';\n\nimport { getStyle } from './input.style';\nimport { TextareaProps } from './textarea.type';\nimport { useTheme } from '../../theme';\nimport { useDefaultProps } from '../../utilities/useDefaultProps';\n\nconst Textarea: React.FunctionComponent<TextareaProps> = (incomingProps) => {\n  const props = useDefaultProps('Textarea', incomingProps, {\n    minH: 100,\n    p: 'lg',\n    borderColor: 'gray500',\n    borderWidth: 1,\n    multiline: true,\n    textAlignVertical: 'top',\n  });\n\n  const {\n    h,\n    w,\n    m,\n    minH,\n    minW,\n    suffix,\n    prefix,\n    style,\n    onBlur,\n    onFocus,\n    children,\n    focusBorderColor,\n    ...rest\n  } = props;\n  const { theme } = useTheme();\n  const [isFocussed, setIsFocussed] = useState(false);\n  const computedStyle = getStyle(theme, props, { isFocussed });\n\n  /**\n   * on focus input\n   */\n  const onFocusInput = (e: NativeSyntheticEvent<TextInputFocusEventData>) => {\n    setIsFocussed(true);\n\n    if (onFocus) {\n      onFocus(e);\n    }\n  };\n\n  /**\n   * on blur input\n   * @param e\n   */\n  const onBlurInput = (e: NativeSyntheticEvent<TextInputFocusEventData>) => {\n    setIsFocussed(false);\n\n    if (onBlur) {\n      onBlur(e);\n    }\n  };\n\n  return (\n    <RNView style={computedStyle.container}>\n      <RNTextInput\n        onFocus={(e) => onFocusInput(e)}\n        onBlur={(e) => onBlurInput(e)}\n        style={computedStyle.input}\n        {...rest}\n      />\n    </RNView>\n  );\n};\n\n// Textarea.defaultProps = {\n//   minH: 100,\n//   p: 'lg',\n//   borderColor: 'gray500',\n//   borderWidth: 1,\n// };\n\nexport { Textarea };\n"],"mappings":";;;;;;;AAAA;;AAEA;;AAOA;;AAEA;;AACA;;;;;;;;AAEA,MAAMA,QAAgD,GAAIC,aAAD,IAAmB;EAC1E,MAAMC,KAAK,GAAG,IAAAC,gCAAA,EAAgB,UAAhB,EAA4BF,aAA5B,EAA2C;IACvDG,IAAI,EAAE,GADiD;IAEvDC,CAAC,EAAE,IAFoD;IAGvDC,WAAW,EAAE,SAH0C;IAIvDC,WAAW,EAAE,CAJ0C;IAKvDC,SAAS,EAAE,IAL4C;IAMvDC,iBAAiB,EAAE;EANoC,CAA3C,CAAd;EASA,MAAM;IACJC,CADI;IAEJC,CAFI;IAGJC,CAHI;IAIJR,IAJI;IAKJS,IALI;IAMJC,MANI;IAOJC,MAPI;IAQJC,KARI;IASJC,MATI;IAUJC,OAVI;IAWJC,QAXI;IAYJC,gBAZI;IAaJ,GAAGC;EAbC,IAcFnB,KAdJ;EAeA,MAAM;IAAEoB;EAAF,IAAY,IAAAC,eAAA,GAAlB;EACA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B,IAAAC,cAAA,EAAS,KAAT,CAApC;EACA,MAAMC,aAAa,GAAG,IAAAC,eAAA,EAASN,KAAT,EAAgBpB,KAAhB,EAAuB;IAAEsB;EAAF,CAAvB,CAAtB;EAEA;AACF;AACA;;EACE,MAAMK,YAAY,GAAIC,CAAD,IAAsD;IACzEL,aAAa,CAAC,IAAD,CAAb;;IAEA,IAAIP,OAAJ,EAAa;MACXA,OAAO,CAACY,CAAD,CAAP;IACD;EACF,CAND;EAQA;AACF;AACA;AACA;;;EACE,MAAMC,WAAW,GAAID,CAAD,IAAsD;IACxEL,aAAa,CAAC,KAAD,CAAb;;IAEA,IAAIR,MAAJ,EAAY;MACVA,MAAM,CAACa,CAAD,CAAN;IACD;EACF,CAND;;EAQA,oBACE,oBAAC,iBAAD;IAAQ,KAAK,EAAEH,aAAa,CAACK;EAA7B,gBACE,oBAAC,sBAAD;IACE,OAAO,EAAGF,CAAD,IAAOD,YAAY,CAACC,CAAD,CAD9B;IAEE,MAAM,EAAGA,CAAD,IAAOC,WAAW,CAACD,CAAD,CAF5B;IAGE,KAAK,EAAEH,aAAa,CAACM;EAHvB,GAIMZ,IAJN,EADF,CADF;AAUD,CA9DD,C,CAgEA;AACA;AACA;AACA;AACA;AACA"}