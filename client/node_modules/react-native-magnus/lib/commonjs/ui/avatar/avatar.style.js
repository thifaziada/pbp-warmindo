"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getStyle = void 0;

var _reactNative = require("react-native");

var _theme = require("../../theme/theme.service");

/**
 * computed style
 *
 * @param theme
 * @param props
 */
const getStyle = (theme, props) => {
  const computedStyle = {};
  computedStyle.container = {
    backgroundColor: (0, _theme.getThemeColor)(theme.colors, props.bg),
    alignItems: 'center',
    justifyContent: 'center',
    width: props.size,
    height: props.size,
    alignSelf: props.alignSelf,
    zIndex: props.zIndex,
    opacity: props.opacity,
    ...(0, _theme.createPositionStyle)(props),
    ...(0, _theme.createBorderWidthStyles)(props),
    ...(0, _theme.createShadowStyles)(props, theme),
    ...(0, _theme.createSpacingStyles)(props, theme.spacing),
    ...(0, _theme.createBorderColorStyles)(props, theme.colors),
    ...(0, _theme.createBorderRadiusStyles)(props, theme.borderRadius)
  };
  computedStyle.row = {
    backgroundColor: (0, _theme.getThemeColor)(theme.colors, props.bg),
    alignItems: 'center',
    justifyContent: 'center',
    flexDirection: 'row',
    alignSelf: props.alignSelf,
    zIndex: props.zIndex,
    opacity: props.opacity,
    ...(0, _theme.createPositionStyle)(props),
    ...(0, _theme.createBorderWidthStyles)(props),
    ...(0, _theme.createShadowStyles)(props, theme),
    ...(0, _theme.createSpacingStyles)(props, theme.spacing),
    ...(0, _theme.createBorderColorStyles)(props, theme.colors),
    ...(0, _theme.createBorderRadiusStyles)(props, theme.borderRadius)
  };
  computedStyle.text = {
    color: (0, _theme.getThemeColor)(theme.colors, props.color),
    fontSize: (0, _theme.getThemeProperty)(theme.fontSize, props.fontSize),
    textAlignVertical: 'center',
    textAlign: 'center'
  };
  computedStyle.image = {
    height: props.size,
    width: props.size,
    ...(0, _theme.createBorderRadiusStyles)(props, theme.borderRadius)
  }; // merging style props to computed style

  if (props.style) {
    computedStyle.container = { ...computedStyle.container,
      // @ts-ignore
      ...props.style
    };
  }

  return _reactNative.StyleSheet.create(computedStyle);
};

exports.getStyle = getStyle;
//# sourceMappingURL=avatar.style.js.map