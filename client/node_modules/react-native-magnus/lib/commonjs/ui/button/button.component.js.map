{"version":3,"names":["Button","incomingProps","props","useDefaultProps","bg","p","color","rounded","loading","disabled","loaderSize","loaderColor","block","position","shadowColor","shadow","fontSize","rippleColor","ripple","borderless","alignItems","justifyContent","alignSelf","onPress","flexDir","m","mt","mr","mb","ml","ms","pr","pt","pb","pl","h","w","minW","minH","suffix","style","fontWeight","prefix","roundedTop","roundedRight","roundedBottom","roundedLeft","colorProp","children","borderColor","borderBottomColor","borderLeftColor","borderTopColor","borderRightColor","borderWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","borderTopWidth","borderEndWidth","rest","theme","useTheme","computedStyle","getStyle","underlayColor","getUnderlayColor","calculatedRippleColor","getRippleColor","renderChildren","getSpecificProps","textProps","text","undefined","pressed","button","backgroundColor","container","loadingContainer","getThemeProperty","getThemeColor","colors"],"sources":["button.component.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  View as RNView,\n  Animated as RNAnimated,\n  Pressable as RNButton,\n  ActivityIndicator as RNActivityIndicator,\n} from 'react-native';\n\nimport { getStyle } from './button.style';\nimport { useTheme } from '../../theme';\nimport { ButtonProps } from './button.type';\nimport { getThemeProperty, getThemeColor } from '../../theme/theme.service';\nimport { getUnderlayColor, getRippleColor } from './button.service';\n\nimport { Text } from '../text/text.component';\nimport { textProps } from '../../types';\nimport { getSpecificProps } from '../../utilities';\n\nimport { useDefaultProps } from '../../utilities/useDefaultProps';\n\nconst Button: React.FunctionComponent<ButtonProps> = (incomingProps) => {\n  const props = useDefaultProps('Button', incomingProps, {\n    bg: 'blue600',\n    p: 'lg',\n    color: 'white',\n    rounded: 'sm',\n    loading: false,\n    disabled: false,\n    loaderSize: '2xl',\n    loaderColor: 'white',\n    block: false,\n    position: 'relative',\n    shadowColor: 'gray800',\n    shadow: 0,\n    fontSize: 'lg',\n    rippleColor: 'white',\n    ripple: true,\n    borderless: false,\n    alignItems: 'center',\n    justifyContent: 'center',\n    alignSelf: 'flex-start',\n    onPress: () => {},\n    flexDir: 'row',\n  });\n\n  const {\n    m,\n    mt,\n    mr,\n    mb,\n    ml,\n    ms,\n    p,\n    pr,\n    pt,\n    pb,\n    pl,\n    h,\n    w,\n    bg,\n    minW,\n    minH,\n    suffix,\n    style,\n    fontSize,\n    fontWeight,\n    prefix,\n    rounded,\n    roundedTop,\n    roundedRight,\n    roundedBottom,\n    roundedLeft,\n    color: colorProp,\n    loading,\n    disabled,\n    loaderColor,\n    loaderSize,\n    children,\n    borderColor,\n    borderBottomColor,\n    borderLeftColor,\n    borderTopColor,\n    borderRightColor,\n    borderWidth,\n    borderLeftWidth,\n    borderRightWidth,\n    borderBottomWidth,\n    borderTopWidth,\n    borderEndWidth,\n    shadow,\n    borderless,\n    rippleColor,\n    shadowColor,\n    onPress,\n    block,\n    ripple,\n    alignSelf,\n    ...rest\n  } = props;\n\n  const { theme } = useTheme();\n  const computedStyle = getStyle(theme, props);\n  const underlayColor = getUnderlayColor(theme, props);\n  const calculatedRippleColor = getRippleColor(theme, props);\n\n  /**\n   * renders children based on type\n   */\n  const renderChildren = () => {\n    if (typeof children === 'string') {\n      return (\n        <Text\n          {...getSpecificProps(props, ...textProps)}\n          style={computedStyle.text}\n        >\n          {children}\n        </Text>\n      );\n    }\n\n    return children;\n  };\n\n  return (\n    <RNButton\n      {...rest}\n      onPress={disabled || loading ? undefined : onPress}\n      style={({ pressed }) => [\n        computedStyle.button,\n        pressed && !disabled && !loading && { backgroundColor: underlayColor },\n      ]}\n      android_ripple={\n        !ripple\n          ? {\n              color: calculatedRippleColor,\n              borderless,\n            }\n          : null\n      }\n    >\n      {loading ? (\n        <RNView style={computedStyle.container}>\n          <RNView style={computedStyle.loadingContainer}>\n            <RNActivityIndicator\n              size={getThemeProperty(theme.fontSize, loaderSize)}\n              color={getThemeColor(theme.colors, loaderColor)}\n            />\n          </RNView>\n        </RNView>\n      ) : (\n        <RNAnimated.View style={computedStyle.container}>\n          <>\n            {prefix}\n            {renderChildren()}\n            {suffix}\n          </>\n        </RNAnimated.View>\n      )}\n    </RNButton>\n  );\n};\n\n// Button.defaultProps = {\n//   bg: 'blue600',\n//   p: 'lg',\n//   color: 'white',\n//   rounded: 'sm',\n//   loading: false,\n//   disabled: false,\n//   loaderSize: '2xl',\n//   loaderColor: 'white',\n//   block: false,\n//   position: 'relative',\n//   shadowColor: 'gray800',\n//   shadow: 0,\n//   fontSize: 'lg',\n//   rippleColor: 'white',\n//   ripple: true,\n//   borderless: false,\n//   alignItems: 'center',\n//   justifyContent: 'center',\n//   alignSelf: 'flex-start',\n//   onPress: () => {},\n//   flexDir: 'row',\n// };\n\nexport { Button };\n"],"mappings":"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"}