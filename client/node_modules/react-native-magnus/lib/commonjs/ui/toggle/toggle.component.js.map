{"version":3,"names":["Toggle","incomingProps","props","useDefaultProps","w","h","onPress","activeBg","bg","on","circleBg","activeCircleBg","duration","rounded","disabled","m","mt","mr","mb","ml","ms","p","pr","pt","pb","pl","roundedTop","roundedRight","roundedBottom","roundedLeft","borderColor","borderBottomColor","borderLeftColor","borderTopColor","borderRightColor","borderWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","borderTopWidth","borderEndWidth","rest","animXValue","useState","Animated","Value","theme","useTheme","computedStyle","getStyle","endPos","circlePosXEnd","circlePosXStart","prevSwitchOnRef","useRef","prevSwitchOn","current","useEffect","runAnimation","animValue","fromValue","toValue","useNativeDriver","timing","start","container","backgroundColor","interpolate","inputRange","outputRange","getThemeColor","colors","circle","transform","translateX"],"sources":["toggle.component.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, TouchableOpacity } from 'react-native';\nimport { useEffect, useRef, useState } from 'react';\n\nimport { getStyle } from './toggle.style';\nimport { ToggleProps } from './toggle.type';\nimport { useTheme } from '../../theme';\nimport { getThemeColor } from '../../theme/theme.service';\nimport { useDefaultProps } from '../../utilities/useDefaultProps';\n\nconst Toggle: React.FC<ToggleProps> = (incomingProps) => {\n  const props = useDefaultProps('Toggle', incomingProps, {\n    w: 55,\n    h: 30,\n    onPress: (): void => {},\n    activeBg: 'green600',\n    bg: 'gray400',\n    on: false,\n    circleBg: 'white',\n    activeCircleBg: 'white',\n    duration: 300,\n    rounded: 'circle',\n    disabled: false,\n  });\n\n  const {\n    h,\n    w,\n    bg,\n    m,\n    mt,\n    mr,\n    mb,\n    ml,\n    ms,\n    p,\n    pr,\n    pt,\n    pb,\n    pl,\n    disabled,\n    rounded,\n    roundedTop,\n    roundedRight,\n    roundedBottom,\n    roundedLeft,\n    borderColor,\n    borderBottomColor,\n    borderLeftColor,\n    borderTopColor,\n    borderRightColor,\n    borderWidth,\n    borderLeftWidth,\n    borderRightWidth,\n    borderBottomWidth,\n    borderTopWidth,\n    borderEndWidth,\n    onPress,\n    activeBg,\n    circleBg,\n    activeCircleBg,\n    duration,\n    on,\n    ...rest\n  } = props;\n  const [animXValue] = useState(new Animated.Value(on ? 1 : 0));\n  const { theme } = useTheme();\n  const computedStyle = getStyle(theme, props);\n\n  const endPos = (w as number) - (h as number) + 3;\n  const circlePosXEnd = endPos;\n  const [circlePosXStart] = useState(3);\n\n  const prevSwitchOnRef = useRef<boolean>();\n  const prevSwitchOn = !!prevSwitchOnRef.current;\n\n  /**\n   *\n   */\n  useEffect(() => {\n    const runAnimation = (): void => {\n      const animValue = {\n        fromValue: on ? 0 : 1,\n        toValue: on ? 1 : 0,\n        duration,\n        useNativeDriver: false,\n      };\n      Animated.timing(animXValue, animValue).start();\n    };\n\n    prevSwitchOnRef.current = on;\n    if (prevSwitchOn !== on) {\n      runAnimation();\n    }\n  }, [animXValue, prevSwitchOn, on, duration]);\n\n  return (\n    <TouchableOpacity\n      onPress={!disabled ? onPress : () => {}}\n      activeOpacity={0.5}\n      {...rest}\n    >\n      <Animated.View\n        style={[\n          computedStyle.container,\n          {\n            backgroundColor: animXValue.interpolate({\n              inputRange: [0, 1],\n              outputRange: [\n                getThemeColor(theme.colors, bg),\n                getThemeColor(theme.colors, activeBg),\n              ],\n            }),\n          },\n        ]}\n      >\n        <Animated.View\n          style={[\n            computedStyle.circle,\n            {\n              backgroundColor: animXValue.interpolate({\n                inputRange: [0, 1],\n                outputRange: [\n                  getThemeColor(theme.colors, circleBg),\n                  getThemeColor(theme.colors, activeCircleBg),\n                ],\n              }),\n            },\n            {\n              transform: [\n                {\n                  translateX: animXValue.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [\n                      circlePosXStart as string | number,\n                      circlePosXEnd as string | number,\n                    ] as string[] | number[],\n                  }),\n                },\n              ],\n            },\n          ]}\n        />\n      </Animated.View>\n    </TouchableOpacity>\n  );\n};\n\n// Toggle.defaultProps = {\n//   w: 55,\n//   h: 30,\n//   onPress: (): void => {},\n//   activeBg: 'green600',\n//   bg: 'gray400',\n//   on: false,\n//   circleBg: 'white',\n//   activeCircleBg: 'white',\n//   duration: 300,\n//   rounded: 'circle',\n//   disabled: false,\n// };\n\nexport { Toggle };\n"],"mappings":"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"}