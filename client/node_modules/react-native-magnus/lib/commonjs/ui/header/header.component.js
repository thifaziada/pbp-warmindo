"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Header = void 0;

var React = _interopRequireWildcard(require("react"));

var _text = require("../text/text.component");

var _header = require("./header.style");

var _theme = require("../../theme");

var _utilities = require("../../utilities");

var _types = require("../../types");

var _useDefaultProps = require("../../utilities/useDefaultProps");

var _div = require("../div/div.component");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const Header = incomingProps => {
  const props = (0, _useDefaultProps.useDefaultProps)('Header', incomingProps, {
    minH: 70,
    p: 'lg',
    bg: 'white',
    rounded: 'none',
    flexDir: 'row',
    shadow: 'sm',
    shadowColor: 'gray900',
    position: 'relative',
    bgMode: 'cover',
    pointerEvents: 'auto',
    borderStyle: 'solid',
    alignItems: 'center',
    alignment: 'left',
    fontWeight: 'bold',
    fontSize: 'lg',
    textTransform: 'uppercase'
  });
  const {
    children,
    prefix,
    suffix,
    ...rest
  } = props;
  const {
    theme
  } = (0, _theme.useTheme)();
  const computedStyle = (0, _header.getStyle)(theme, props);
  /**
   * renders children based on type
   */

  const renderChildren = () => {
    if (typeof children === 'string') {
      return /*#__PURE__*/React.createElement(_text.Text, _extends({}, (0, _utilities.getSpecificProps)(props, ..._types.textProps), {
        style: computedStyle.text
      }), children);
    }

    return children;
  };

  const getPrefix = () => {
    if (props.alignment === 'center') {
      return prefix;
    }

    return prefix ?? /*#__PURE__*/React.createElement(_div.Div, {
      px: "sm"
    });
  };

  return /*#__PURE__*/React.createElement(_div.Div, rest, /*#__PURE__*/React.createElement(_div.Div, {
    style: computedStyle.prefix
  }, getPrefix()), /*#__PURE__*/React.createElement(_div.Div, {
    style: computedStyle.center
  }, renderChildren()), /*#__PURE__*/React.createElement(_div.Div, {
    style: computedStyle.suffix
  }, suffix));
};

exports.Header = Header;
//# sourceMappingURL=header.component.js.map