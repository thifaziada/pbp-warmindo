"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getStyle = void 0;

var _color = _interopRequireDefault(require("color"));

var _reactNative = require("react-native");

var _theme = require("../../theme/theme.service");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * computed style
 *
 * @param theme
 * @param props
 */
const getStyle = (theme, props) => {
  const computedStyle = {};
  computedStyle.modal = {
    backgroundColor: (0, _color.default)((0, _theme.getThemeColor)(theme.colors, props.overlayColor)).alpha(props.overlayOpacity ?? 50).rgb().string(),
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center'
  };
  computedStyle.container = {
    backgroundColor: (0, _theme.getThemeColor)(theme.colors, props.bg),
    ...(0, _theme.createFlexStyles)(props),
    ...(0, _theme.createSpacingStyles)(props, theme.spacing),
    ...(0, _theme.createBorderRadiusStyles)(props, theme.borderRadius),
    width: props.w,
    height: props.h,
    alignItems: props.alignItems,
    justifyContent: props.justifyContent
  }; // merging style props to computed style

  if (props.style) {
    computedStyle.container = { ...computedStyle.container,
      // @ts-ignore
      ...props.style
    };
  }

  return _reactNative.StyleSheet.create(computedStyle);
};

exports.getStyle = getStyle;
//# sourceMappingURL=overlay.style.js.map