{"version":3,"names":["getStyle","theme","props","computedStyle","div","flexDirection","row","flexDir","flexWrap","alignItems","justifyContent","height","h","width","w","minWidth","minW","minHeight","minH","alignSelf","maxWidth","maxW","maxHeight","maxH","opacity","overflow","zIndex","borderStyle","backgroundColor","getThemeColor","colors","bg","createFlexStyles","createPositionStyle","createShadowStyles","createBorderWidthStyles","createSpacingStyles","spacing","createBorderColorStyles","createBorderRadiusStyles","borderRadius","image","style","StyleSheet","create"],"sources":["animated.style.tsx"],"sourcesContent":["import { StyleSheet } from 'react-native';\nimport { ThemeType } from '../../theme';\n\nimport {\n  createFlexStyles,\n  createShadowStyles,\n  createPositionStyle,\n  createSpacingStyles,\n  createBorderWidthStyles,\n  createBorderColorStyles,\n  createBorderRadiusStyles,\n  getThemeColor,\n} from '../../theme/theme.service';\n\n/**\n * computed style\n *\n * @param theme\n * @param props\n */\nexport const getStyle = (theme: ThemeType, props: any) => {\n  const computedStyle: any = {};\n\n  computedStyle.div = {\n    flexDirection: props.row ? 'row' : props.flexDir,\n    flexWrap: props.flexWrap,\n    alignItems: props.alignItems,\n    justifyContent: props.justifyContent,\n    height: props.h,\n    width: props.w,\n    minWidth: props.minW,\n    minHeight: props.minH,\n    alignSelf: props.alignSelf,\n    maxWidth: props.maxW,\n    maxHeight: props.maxH,\n    opacity: props.opacity,\n    overflow: props.overflow,\n    zIndex: props.zIndex,\n    borderStyle: props.borderStyle,\n    backgroundColor: getThemeColor(theme.colors, props.bg),\n    ...createFlexStyles(props),\n    ...createPositionStyle(props),\n    ...createShadowStyles(props, theme),\n    ...createBorderWidthStyles(props),\n    ...createSpacingStyles(props, theme.spacing),\n    ...createBorderColorStyles(props, theme.colors),\n    ...createBorderRadiusStyles(props, theme.borderRadius),\n  };\n\n  computedStyle.image = {\n    ...createBorderRadiusStyles(props, theme.borderRadius),\n  };\n\n  // merging style props to computed style\n  if (props.style) {\n    computedStyle.div = {\n      ...computedStyle.div,\n      ...props.style,\n    };\n  }\n\n  return StyleSheet.create(computedStyle);\n};\n"],"mappings":";;;;;;;AAAA;;AAGA;;AAWA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,QAAQ,GAAG,CAACC,KAAD,EAAmBC,KAAnB,KAAkC;EACxD,MAAMC,aAAkB,GAAG,EAA3B;EAEAA,aAAa,CAACC,GAAd,GAAoB;IAClBC,aAAa,EAAEH,KAAK,CAACI,GAAN,GAAY,KAAZ,GAAoBJ,KAAK,CAACK,OADvB;IAElBC,QAAQ,EAAEN,KAAK,CAACM,QAFE;IAGlBC,UAAU,EAAEP,KAAK,CAACO,UAHA;IAIlBC,cAAc,EAAER,KAAK,CAACQ,cAJJ;IAKlBC,MAAM,EAAET,KAAK,CAACU,CALI;IAMlBC,KAAK,EAAEX,KAAK,CAACY,CANK;IAOlBC,QAAQ,EAAEb,KAAK,CAACc,IAPE;IAQlBC,SAAS,EAAEf,KAAK,CAACgB,IARC;IASlBC,SAAS,EAAEjB,KAAK,CAACiB,SATC;IAUlBC,QAAQ,EAAElB,KAAK,CAACmB,IAVE;IAWlBC,SAAS,EAAEpB,KAAK,CAACqB,IAXC;IAYlBC,OAAO,EAAEtB,KAAK,CAACsB,OAZG;IAalBC,QAAQ,EAAEvB,KAAK,CAACuB,QAbE;IAclBC,MAAM,EAAExB,KAAK,CAACwB,MAdI;IAelBC,WAAW,EAAEzB,KAAK,CAACyB,WAfD;IAgBlBC,eAAe,EAAE,IAAAC,oBAAA,EAAc5B,KAAK,CAAC6B,MAApB,EAA4B5B,KAAK,CAAC6B,EAAlC,CAhBC;IAiBlB,GAAG,IAAAC,uBAAA,EAAiB9B,KAAjB,CAjBe;IAkBlB,GAAG,IAAA+B,0BAAA,EAAoB/B,KAApB,CAlBe;IAmBlB,GAAG,IAAAgC,yBAAA,EAAmBhC,KAAnB,EAA0BD,KAA1B,CAnBe;IAoBlB,GAAG,IAAAkC,8BAAA,EAAwBjC,KAAxB,CApBe;IAqBlB,GAAG,IAAAkC,0BAAA,EAAoBlC,KAApB,EAA2BD,KAAK,CAACoC,OAAjC,CArBe;IAsBlB,GAAG,IAAAC,8BAAA,EAAwBpC,KAAxB,EAA+BD,KAAK,CAAC6B,MAArC,CAtBe;IAuBlB,GAAG,IAAAS,+BAAA,EAAyBrC,KAAzB,EAAgCD,KAAK,CAACuC,YAAtC;EAvBe,CAApB;EA0BArC,aAAa,CAACsC,KAAd,GAAsB,EACpB,GAAG,IAAAF,+BAAA,EAAyBrC,KAAzB,EAAgCD,KAAK,CAACuC,YAAtC;EADiB,CAAtB,CA7BwD,CAiCxD;;EACA,IAAItC,KAAK,CAACwC,KAAV,EAAiB;IACfvC,aAAa,CAACC,GAAd,GAAoB,EAClB,GAAGD,aAAa,CAACC,GADC;MAElB,GAAGF,KAAK,CAACwC;IAFS,CAApB;EAID;;EAED,OAAOC,uBAAA,CAAWC,MAAX,CAAkBzC,aAAlB,CAAP;AACD,CA1CM"}