function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import * as React from 'react';
import { ThemeContext } from './theme.context';
/**
 * passes theme to prop of Component
 *
 * @param Component
 */

export const withTheme = Component => props => /*#__PURE__*/React.createElement(ThemeContext.Consumer, null, contexts => {
  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {
    theme: { ...contexts
    }
  }));
});
//# sourceMappingURL=withTheme.js.map