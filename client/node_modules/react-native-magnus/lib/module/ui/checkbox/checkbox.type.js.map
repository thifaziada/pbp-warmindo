{"version":3,"names":[],"sources":["checkbox.type.tsx"],"sourcesContent":["import { PressableProps as RNButtonProps } from 'react-native';\nimport {\n  BackgroundPropsType,\n  ButtonPropsType,\n  DimensionPropsType,\n  DisabledPropsType,\n  FlexPropsType,\n  LoadingPropsType,\n  OpacityPropsType,\n  PositionPropsType,\n  PrefixSuffixPropsType,\n  TextPropsType,\n  ZIndexPropsType,\n  BorderPropsType,\n  SpacingPropsType,\n  RoundedPropsType,\n  ShadowPropsType,\n  VariantPropsType,\n} from '../../types';\nimport { DivProps } from '../div/div.type';\nimport { CheckboxGroup } from './group.component';\n\nexport type CompundedCheckbox<P> = React.FunctionComponent<P> & {\n  Group: typeof CheckboxGroup;\n};\n\nexport interface CheckboxProps\n  extends Omit<RNButtonProps, 'children'>,\n    BorderPropsType,\n    SpacingPropsType,\n    ShadowPropsType,\n    RoundedPropsType,\n    DimensionPropsType,\n    PositionPropsType,\n    FlexPropsType,\n    LoadingPropsType,\n    PrefixSuffixPropsType,\n    OpacityPropsType,\n    ZIndexPropsType,\n    DisabledPropsType,\n    Pick<TextPropsType, 'fontWeight' | 'color' | 'fontSize'>,\n    Pick<BackgroundPropsType, 'bg'>,\n    ButtonPropsType,\n    VariantPropsType {\n  highlightBg?: string;\n  activeColor?: string;\n  inactiveColor?: string;\n  defaultChecked?: boolean;\n  activeIcon?: string | React.ReactNode;\n  inactiveIcon?: string | React.ReactNode;\n  checked?: boolean;\n  onChecked?: (newValue: boolean) => void;\n  onChange?: (value: any) => void;\n  value?: any;\n  children?: ((states: CheckboxStates) => React.ReactNode) | React.ReactNode;\n}\n\nexport interface CheckboxGroupProps extends DivProps {\n  onChange?: (value: any[]) => void;\n  value?: any[];\n  defaultValue?: any[];\n  children: React.ReactElement[] | React.ReactElement;\n}\n\nexport interface CheckboxStates {\n  focussed?: boolean;\n  checked?: boolean;\n  disabled?: boolean;\n  loading?: boolean;\n}\n"],"mappings":""}