function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import * as React from 'react';
import { View as RNView } from 'react-native';
import { getStyle } from './icon.style';
import { getIconSet } from './icon.service';
import { useTheme } from '../../theme';
import { getThemeProperty, getThemeColor } from '../../theme/theme.service';
import { useDefaultProps } from '../../utilities/useDefaultProps';

const Icon = incomingProps => {
  const props = useDefaultProps('Icon', incomingProps, {
    color: 'gray500',
    fontSize: 'md',
    fontFamily: 'AntDesign'
  });
  const {
    m,
    mt,
    mr,
    mb,
    ml,
    ms,
    p,
    pr,
    pt,
    pb,
    pl,
    h,
    w,
    bg,
    position,
    left,
    top,
    bottom,
    right,
    name,
    color,
    rounded,
    maxH,
    maxW,
    minW,
    minH,
    roundedTop,
    roundedRight,
    roundedBottom,
    roundedLeft,
    shadow,
    shadowColor,
    borderColor,
    borderBottomColor,
    borderLeftColor,
    borderTopColor,
    borderRightColor,
    borderWidth,
    borderLeftWidth,
    borderRightWidth,
    borderBottomWidth,
    borderTopWidth,
    borderEndWidth,
    fontFamily,
    fontSize,
    opacity,
    zIndex,
    style,
    ...rest
  } = props;
  const {
    theme
  } = useTheme();
  const computedStyle = getStyle(theme, props);
  const Icon = getIconSet(fontFamily);
  return /*#__PURE__*/React.createElement(RNView, _extends({
    style: computedStyle.container
  }, rest), /*#__PURE__*/React.createElement(Icon, {
    color: getThemeColor(theme.colors, color),
    size: getThemeProperty(theme.fontSize, fontSize),
    name: name,
    style: computedStyle.icon
  }));
}; // Icon.defaultProps = {
//   color: 'gray500',
//   fontSize: 'md',
//   fontFamily: 'AntDesign',
// };


export { Icon };
//# sourceMappingURL=icon.component.js.map