function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import * as React from 'react';
import { Button } from '../button/button.component';
import { useDefaultProps } from '../../utilities/useDefaultProps';

const DropdownOption = incomingProps => {
  const props = useDefaultProps('DropdownOption', incomingProps, {
    onSelect: () => {},
    rounded: 0,
    bg: 'white',
    py: 'lg',
    px: '2xl',
    block: true,
    color: 'black',
    alignItems: 'center',
    justifyContent: 'flex-start'
  });
  const {
    children,
    value,
    onPress: onPressProp,
    onSelect,
    ...rest
  } = props;
  /**
   * on press select option
   *
   * @param e
   */

  const onPress = event => {
    if (onSelect) {
      onSelect(value);
    }

    if (onPressProp) {
      onPressProp(event);
    }
  };

  return /*#__PURE__*/React.createElement(Button, _extends({}, rest, {
    onPress: onPress
  }), children);
}; // DropdownOption.defaultProps = {
//   onSelect: () => {},
//   rounded: 0,
//   bg: 'white',
//   p: 0,
//   color: 'black',
//   alignItems: 'flex-start',
//   justifyContent: 'flex-start',
// };


export { DropdownOption };
//# sourceMappingURL=dropdown.option.component.js.map