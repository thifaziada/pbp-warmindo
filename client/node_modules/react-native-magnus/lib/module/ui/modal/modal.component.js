function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import * as React from 'react';
import RNModal from 'react-native-modal';
import { SafeAreaView } from 'react-native';
import { useState, useEffect, useImperativeHandle } from 'react';
import { getStyle } from './modal.style';
import { useTheme } from '../../theme';
import { Div } from '../div/div.component';
import { useDefaultProps } from '../../utilities/useDefaultProps';
const Modal = /*#__PURE__*/React.forwardRef((incomingProps, ref) => {
  const props = useDefaultProps('Modal', incomingProps, {
    bg: 'white',
    h: '100%',
    isVisible: false,
    justifyContent: 'flex-end'
  });
  const {
    bg,
    h,
    m,
    mt,
    mr,
    mb,
    ml,
    ms,
    p,
    pr,
    pt,
    pb,
    pl,
    rounded,
    roundedTop,
    roundedRight,
    roundedBottom,
    roundedLeft,
    borderColor,
    borderBottomColor,
    borderLeftColor,
    borderTopColor,
    borderRightColor,
    borderWidth,
    borderLeftWidth,
    borderRightWidth,
    borderBottomWidth,
    borderEndWidth,
    borderTopWidth,
    justifyContent,
    children,
    isVisible,
    ...rest
  } = props;
  const [visible, setVisible] = useState(isVisible);
  const {
    theme
  } = useTheme();
  const computedStyle = getStyle(theme, props);
  useEffect(() => {
    if ('isVisible' in props) {
      setVisible(props.isVisible);
    }
  }, [props, visible]);
  /**
   * exposing functions through ref
   */

  useImperativeHandle(ref, () => ({
    open() {
      setVisible(true);
    },

    close() {
      setVisible(false);
    }

  }));
  return /*#__PURE__*/React.createElement(RNModal, _extends({
    isVisible: visible
  }, rest, {
    style: computedStyle.modal
  }), /*#__PURE__*/React.createElement(Div, {
    bg: bg,
    h: h ?? '100%',
    style: computedStyle.container
  }, /*#__PURE__*/React.createElement(SafeAreaView, {
    style: computedStyle.safeView
  }, children)));
}); // Modal.defaultProps = {
//   bg: 'white',
//   h: '100%',
//   isVisible: false,
//   justifyContent: 'flex-end',
// };

export { Modal };
//# sourceMappingURL=modal.component.js.map