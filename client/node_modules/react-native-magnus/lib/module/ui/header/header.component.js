function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import * as React from 'react';
import { Text } from '../text/text.component';
import { getStyle } from './header.style';
import { useTheme } from '../../theme';
import { getSpecificProps } from '../../utilities';
import { textProps } from '../../types';
import { useDefaultProps } from '../../utilities/useDefaultProps';
import { Div } from '../div/div.component';

const Header = incomingProps => {
  const props = useDefaultProps('Header', incomingProps, {
    minH: 70,
    p: 'lg',
    bg: 'white',
    rounded: 'none',
    flexDir: 'row',
    shadow: 'sm',
    shadowColor: 'gray900',
    position: 'relative',
    bgMode: 'cover',
    pointerEvents: 'auto',
    borderStyle: 'solid',
    alignItems: 'center',
    alignment: 'left',
    fontWeight: 'bold',
    fontSize: 'lg',
    textTransform: 'uppercase'
  });
  const {
    children,
    prefix,
    suffix,
    ...rest
  } = props;
  const {
    theme
  } = useTheme();
  const computedStyle = getStyle(theme, props);
  /**
   * renders children based on type
   */

  const renderChildren = () => {
    if (typeof children === 'string') {
      return /*#__PURE__*/React.createElement(Text, _extends({}, getSpecificProps(props, ...textProps), {
        style: computedStyle.text
      }), children);
    }

    return children;
  };

  const getPrefix = () => {
    if (props.alignment === 'center') {
      return prefix;
    }

    return prefix ?? /*#__PURE__*/React.createElement(Div, {
      px: "sm"
    });
  };

  return /*#__PURE__*/React.createElement(Div, rest, /*#__PURE__*/React.createElement(Div, {
    style: computedStyle.prefix
  }, getPrefix()), /*#__PURE__*/React.createElement(Div, {
    style: computedStyle.center
  }, renderChildren()), /*#__PURE__*/React.createElement(Div, {
    style: computedStyle.suffix
  }, suffix));
};

export { Header };
//# sourceMappingURL=header.component.js.map