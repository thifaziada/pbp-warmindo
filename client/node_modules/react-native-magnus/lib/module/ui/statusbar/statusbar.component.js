function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import { StatusBar as RNStatusBar } from 'react-native';
import { useTheme } from '../../theme';
import { getThemeColor } from '../../theme/theme.service';
import { useDefaultProps } from '../../utilities/useDefaultProps';

const StatusBar = incomingProps => {
  const props = useDefaultProps('Statusbar', incomingProps, {
    animated: true
  });
  const {
    backgroundColor
  } = props;
  const {
    theme
  } = useTheme();
  return /*#__PURE__*/React.createElement(RNStatusBar, _extends({}, props, {
    backgroundColor: typeof backgroundColor === 'string' ? getThemeColor(theme.colors, backgroundColor) : backgroundColor
  }));
};

StatusBar.currentHeight = RNStatusBar.currentHeight; // StatusBar.defaultProps = {
//   animated: true,
// };

export { StatusBar };
//# sourceMappingURL=statusbar.component.js.map