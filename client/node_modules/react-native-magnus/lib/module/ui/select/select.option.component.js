function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import * as React from 'react';
import { Div } from '../div/div.component';
import { Icon } from '../icon/icon.component';
import { Text } from '../text/text.component';
import { Button } from '../button/button.component';
import { useDefaultProps } from '../../utilities/useDefaultProps';

const SelectOption = incomingProps => {
  const props = useDefaultProps('SelectOption', incomingProps, {
    onSelect: () => {},
    rounded: 0,
    bg: 'white',
    px: 'xl',
    py: 'lg',
    color: 'black',
    alignItems: 'flex-start',
    justifyContent: 'flex-start',
    center: false,
    prefix: /*#__PURE__*/React.createElement(Icon, {
      name: "ios-checkmark-circle",
      fontFamily: "Ionicons",
      fontSize: "2xl",
      color: "green600",
      mr: "md"
    })
  });
  const {
    children,
    value,
    prefix,
    onPress: onPressProp,
    onSelect,
    selectedValue,
    ...rest
  } = props;
  const isSelected = Array.isArray(selectedValue) ? selectedValue.includes(value) : selectedValue === value;
  /**
   * on press select option
   *
   * @param e
   */

  const onPress = event => {
    if (onSelect) {
      onSelect(value);
    }

    if (onPressProp) {
      onPressProp(event);
    }
  };
  /**
   * render suffix
   */


  const renderPrefix = () => {
    if (isSelected) {
      return prefix;
    }

    return null;
  };

  const renderChildren = () => {
    if (typeof children === 'string') {
      return /*#__PURE__*/React.createElement(Text, null, children);
    }

    return children;
  };

  return /*#__PURE__*/React.createElement(Button, _extends({}, rest, {
    onPress: onPress,
    block: true,
    alignItems: "center"
  }), prefix && /*#__PURE__*/React.createElement(Div, {
    minW: "8%"
  }, renderPrefix()), /*#__PURE__*/React.createElement(Div, {
    flex: 1,
    bg: "transparent"
  }, renderChildren()));
}; // Option.defaultProps = {
//   onSelect: () => {},
//   rounded: 0,
//   bg: 'white',
//   p: 0,
//   color: 'black',
//   alignItems: 'flex-start',
//   justifyContent: 'flex-start',
//   center: false,
// };


export { SelectOption };
//# sourceMappingURL=select.option.component.js.map